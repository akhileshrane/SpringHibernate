package com.xoriant.dao;

import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

import com.xoriant.dto.Employee;
import com.xoriant.util.HibernateUtil;

public class EmployeeDao {

	public static SessionFactory factory;
	
	public EmployeeDao() {
		try
		{
			factory=HibernateUtil.getSessionFactory();
		}
		catch(Throwable ex)
		{
			throw new ExceptionInInitializerError(ex);
		}
	}
	
	public Integer addEmployee(Employee emp)
	{
		Session session=factory.openSession();
		Transaction tx=null;
		Integer employeeID=null;
		try
		{
			tx=session.beginTransaction();
			//Employee employee=new Employee(emp.getFirstName(), emp.getLastName(), emp.getSalary(), emp.getCertificates());
			employeeID=(Integer)session.save(emp);
			tx.commit();
		}
		catch(HibernateException e)
		{
			if(tx!=null)
				tx.rollback();
			e.printStackTrace();
		}
		finally
		{
			session.close();
		}
		return employeeID;
	}
	
	public List<Employee> listEmployees()
	{
		Session session=factory.openSession();
		Transaction tx=null;
		
		List<Employee> employees=null;
		try
		{
			tx=session.beginTransaction();
			employees=session.createQuery("from Employee").list();
			
			tx.commit();
		}
		catch(HibernateException e)
		{
			if(tx != null)
				tx.rollback();
			e.printStackTrace();
		}
		finally
		{
			//session.close();
		}
		return employees;
	}
	
	public void updateEmployee(Integer EmployeeID,int salary)
	{
		Session session=factory.openSession();
		Transaction tx=null;
		try
		{
			tx=session.beginTransaction();
			Employee employee=(Employee) session.get(Employee.class, EmployeeID);
			employee.setSal(salary);
			
			
			session.update(employee);
		
			tx.commit();
		}
		catch(HibernateException e)
		{
			if(tx!=null)
				tx.rollback();
			e.printStackTrace();
		}
		finally
		{
			session.close();
		}
	}
	
	public void deleteEmployee(Integer EmployeeID)
	{
		Session session=factory.openSession();
		Transaction tx=null;
		try
		{
			tx=session.beginTransaction();
			Employee employee=(Employee) session.get(Employee.class, EmployeeID);
			
			session.delete(employee);
		
			tx.commit();
		}
		catch(HibernateException e)
		{
			if(tx!=null)
				tx.rollback();
			e.printStackTrace();
		}
		finally
		{
			session.close();
		}
	}
	
	
	
}
